global !p

def print_doc(snip, text):
	args = text.split(',')
	try:
		args = [a.strip(' ').split('=')[0] for a in args if a!="self"]
	except IndexError:
		pass
	for a in args:
		if len(a) > 0:
			snip.rv += snip.mkline("\t:param ".expandtabs(4)+a+":\n")
	snip.rv += snip.mkline("\t:return:".expandtabs(4))

endglobal


snippet #! "sheebang" b
#!/usr/bin/env python
endsnippet


snippet new "module docstring" b
# -*- coding: utf-8 -*-
"""${1:`!v expand("%:r:t")`}.

Created on ${2:`date +%d.%m.%Y`}
Author: ${3:Matteo De Pellegrin}
Email: ${4:matteo.dep97@gmail.com}

${2:${VISUAL}}
"""


$0
endsnippet


snippet main "main guard" b
if __name__ == "__main__":
	$0
endsnippet


snippet "\((.*)\):\.d" "create docstring" r
`!p snip.rv = "(" + match.group(1) + "):"`
	"""
	$0

`!p print_doc(snip, match.group(1))`
	"""
endsnippet

snippet dd
"""
$0.
"""
endsnippet

snippet d
"""$0."""
endsnippet

snippet ff
def $1($2):
	"""
	$3

`!p print_doc(snip, t[2])`
	"""
	$0
endsnippet

snippet f
def $1($2):
	"""$3."""
	$0
endsnippet

snippet p
print("${1:${VISUAL}}")$0
endsnippet

snippet pp
print("${1:${VISUAL}}:", $1)$0
endsnippet

snippet hey
print('hey')$0
endsnippet
